<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="neopixel_8h" kind="file" language="C++">
    <compoundname>neopixel.h</compoundname>
    <includes local="no">Adafruit_NeoPixel.h</includes>
    <includes refid="state__machine_8h" local="yes">state_machine.h</includes>
    <includedby refid="main_8cpp" local="yes">src/main.cpp</includedby>
    <includedby refid="neopixel_8cpp" local="yes">src/neopixel.cpp</includedby>
    <includedby refid="micro__ros__bldc_8h" local="yes">include/micro_ros_bldc.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>state_machine.h</label>
        <link refid="state__machine_8h"/>
      </node>
      <node id="1">
        <label>include/neopixel.h</label>
        <link refid="neopixel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Adafruit_NeoPixel.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="3">
        <label>include/micro_ros_bldc.h</label>
        <link refid="micro__ros__bldc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/neopixel.h</label>
        <link refid="neopixel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classLEDStateMachine" prot="public">LEDStateMachine</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="neopixel_8h_1a893011783fefc21f30baf08142cd3c35" prot="public" static="no">
        <name>NUM_PIXELS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="43" column="9" bodyfile="include/neopixel.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="neopixel_8h_1a2134a5a06f0865c945543a1f07eba387" prot="public" static="no">
        <name>MAX_BRIGHTNESS</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="44" column="9" bodyfile="include/neopixel.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="neopixel_8h_1a1a4dc816cd79a0f3c5de1095bb094881" prot="public" static="no">
        <name>BLINK_PERIOD</name>
        <initializer>500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="45" column="9" bodyfile="include/neopixel.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="neopixel_8h_1ad4f24fa30082fd81530b2025b162f7dc" prot="public" static="no">
        <name>IDENTIFY_TIMEOUT</name>
        <initializer>5000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="46" column="9" bodyfile="include/neopixel.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="neopixel_8h_1acf2771bd8bfaf855bbcc6c30301bf380" prot="public" static="no" mutable="no">
        <type>Adafruit_NeoPixel</type>
        <definition>Adafruit_NeoPixel strip</definition>
        <argsstring></argsstring>
        <name>strip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="48" column="26" bodyfile="src/neopixel.cpp" bodystart="6" bodyend="-1" declfile="include/neopixel.h" declline="48" declcolumn="26"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1ad5dcaa56dfbc8a8336d7935a6f210fff" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t LED_OFF</definition>
        <argsstring></argsstring>
        <name>LED_OFF</name>
        <initializer>= strip.Color(0, 0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="50" column="16" bodyfile="include/neopixel.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1acf6845a9cc897e1e358560d1a7f0dd31" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t WHITE</definition>
        <argsstring></argsstring>
        <name>WHITE</name>
        <initializer>= strip.Color(255, 255, 255)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="51" column="16" bodyfile="include/neopixel.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1aafe9e585acf3525c1b551359a72206e0" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t BLUE</definition>
        <argsstring></argsstring>
        <name>BLUE</name>
        <initializer>= strip.Color(0, 0, 255)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="52" column="16" bodyfile="include/neopixel.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1a0865512a9bb6b19e84267299f8936daa" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t GREEN</definition>
        <argsstring></argsstring>
        <name>GREEN</name>
        <initializer>= strip.Color(0, 255, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="53" column="16" bodyfile="include/neopixel.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1a65c666c353fdb6dc7cc726f8a5b48ddc" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t RED</definition>
        <argsstring></argsstring>
        <name>RED</name>
        <initializer>= strip.Color(255, 0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="54" column="16" bodyfile="include/neopixel.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1a5fa208b7248182ee653c4f083464e9c9" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t CYAN</definition>
        <argsstring></argsstring>
        <name>CYAN</name>
        <initializer>= strip.Color(0, 255, 255)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="55" column="16" bodyfile="include/neopixel.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1a7ae3fb3e6e67ffcd7770fa90a93341b7" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t MAGENTA</definition>
        <argsstring></argsstring>
        <name>MAGENTA</name>
        <initializer>= strip.Color(255, 0, 255)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="56" column="16" bodyfile="include/neopixel.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1ae91461e39bc2be9c92809f0106f8effc" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t YELLOW</definition>
        <argsstring></argsstring>
        <name>YELLOW</name>
        <initializer>= strip.Color(255, 255, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="57" column="16" bodyfile="include/neopixel.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1a93b9e8c04bf7328964c9237b40f4de3f" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t ORANGE</definition>
        <argsstring></argsstring>
        <name>ORANGE</name>
        <initializer>= strip.Color(255, 165, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="58" column="16" bodyfile="include/neopixel.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="neopixel_8h_1a390654c06c7e53864060b6343ca77256" prot="public" static="no" mutable="no">
        <type><ref refid="classLEDStateMachine" kindref="compound">LEDStateMachine</ref></type>
        <definition>LEDStateMachine ledStateMachine</definition>
        <argsstring></argsstring>
        <name>ledStateMachine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/neopixel.h" line="110" column="24" bodyfile="src/neopixel.cpp" bodystart="8" bodyend="-1" declfile="include/neopixel.h" declline="110" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Braidan Duffy</para>
</simplesect>
</para>
<sect1 id="neopixel_8h_1intro">
<title>Introduction</title>
<para>This class integrates the <computeroutput><ref refid="classStateMachine" kindref="compound">StateMachine</ref></computeroutput> superclass and defines some NeoPixel-specific functions. The OlympianESC evaluation board uses a NeoPixel RGB LED for user feedback. This includes showing connection and error states, motor controls, and identification testing. The color and pattern of the LED depends on the system state as discussed in the next section.</para>
</sect1>
<sect1 id="neopixel_8h_1colors_patterns">
<title>LED Colors and Patterns</title>
<para>The NeoPixel RGB LED can be commanded to show a practically infinite range of colors in 255 brightness steps. For the system states defined in <computeroutput><ref refid="state__machine_8h" kindref="compound">state_machine.h</ref></computeroutput>, we can build a table for colors and patterns users can associate with each state:</para>
<para><table rows="12" cols="3"><row>
<entry thead="yes"><para>System State   </para>
</entry><entry thead="yes"><para>Color(s)   </para>
</entry><entry thead="yes"><para>Pattern    </para>
</entry></row>
<row>
<entry thead="no"><para>IDLE_NO_CONNECTION   </para>
</entry><entry thead="no"><para>Yellow   </para>
</entry><entry thead="no"><para>Blinking    </para>
</entry></row>
<row>
<entry thead="no"><para>IDLE_WITH_CONNECTION   </para>
</entry><entry thead="no"><para>Yellow   </para>
</entry><entry thead="no"><para>Solid    </para>
</entry></row>
<row>
<entry thead="no"><para>PARTIAL_FORWARD   </para>
</entry><entry thead="no"><para>Green   </para>
</entry><entry thead="no"><para>Blinking    </para>
</entry></row>
<row>
<entry thead="no"><para>PARTIAL_REVERSE   </para>
</entry><entry thead="no"><para>Red   </para>
</entry><entry thead="no"><para>Blinking    </para>
</entry></row>
<row>
<entry thead="no"><para>FULL_FORWARD   </para>
</entry><entry thead="no"><para>Green   </para>
</entry><entry thead="no"><para>Solid    </para>
</entry></row>
<row>
<entry thead="no"><para>FULL_REVERSE   </para>
</entry><entry thead="no"><para>Red   </para>
</entry><entry thead="no"><para>Solid    </para>
</entry></row>
<row>
<entry thead="no"><para>DEVICE_IDENTIFY   </para>
</entry><entry thead="no"><para>White, Magenta   </para>
</entry><entry thead="no"><para>Blinking, alternating    </para>
</entry></row>
<row>
<entry thead="no"><para>MOTOR_DISABLED   </para>
</entry><entry thead="no"><para>Orange, Blue   </para>
</entry><entry thead="no"><para>Blinking, alternating    </para>
</entry></row>
<row>
<entry thead="no"><para>SENSOR_FAULT   </para>
</entry><entry thead="no"><para>Orange, Magenta   </para>
</entry><entry thead="no"><para>Blinking, alternating    </para>
</entry></row>
<row>
<entry thead="no"><para>DRIVER_FAULT   </para>
</entry><entry thead="no"><para>Orange, Cyan   </para>
</entry><entry thead="no"><para>Blinking, alternating    </para>
</entry></row>
<row>
<entry thead="no"><para>TRANSPORT_FAULT   </para>
</entry><entry thead="no"><para>Orange, Yellow   </para>
</entry><entry thead="no"><para>Blinking, alternating   </para>
</entry></row>
</table>
</para>
<para><simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>2024-03-05</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2024 </para>
</simplesect>
</para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NEOPIXEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NEOPIXEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Adafruit_NeoPixel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="state__machine_8h" kindref="compound">state_machine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_PIXELS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BRIGHTNESS<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLINK_PERIOD<sp/>500<sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDENTIFY_TIMEOUT<sp/>5000<sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Adafruit_NeoPixel<sp/>strip;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>LED_OFF<sp/><sp/>=<sp/>strip.Color(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>WHITE<sp/><sp/><sp/><sp/>=<sp/>strip.Color(255,<sp/>255,<sp/>255);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>BLUE<sp/><sp/><sp/><sp/><sp/>=<sp/>strip.Color(0,<sp/>0,<sp/>255);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>GREEN<sp/><sp/><sp/><sp/>=<sp/>strip.Color(0,<sp/>255,<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>RED<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>strip.Color(255,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>CYAN<sp/><sp/><sp/><sp/><sp/>=<sp/>strip.Color(0,<sp/>255,<sp/>255);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>MAGENTA<sp/><sp/>=<sp/>strip.Color(255,<sp/>0,<sp/>255);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>YELLOW<sp/><sp/><sp/>=<sp/>strip.Color(255,<sp/>255,<sp/>0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>ORANGE<sp/><sp/><sp/>=<sp/>strip.Color(255,<sp/>165,<sp/>0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>representing<sp/>the<sp/>state<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classLEDStateMachine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLEDStateMachine" kindref="compound">LEDStateMachine</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classStateMachine" kindref="compound">StateMachine</ref><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classLEDStateMachine_1a618aead359e8e8cebeaf1e1653eb4284" kindref="member">LEDStateMachine</ref>(<ref refid="state__machine_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref><sp/>&amp;currentStatePtr)<sp/>:<sp/><ref refid="classStateMachine_1a1b4d29aa68785888048d72dba673c203" kindref="member">StateMachine</ref>(currentStatePtr)<sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLEDStateMachine_1a6ed1eea0bc40da373e40e267b46e06ac" kindref="member">begin</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLEDStateMachine_1a5553c8f564dead6ffa8c5f716e6a82cd" kindref="member">executeState</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLEDColor(uint32_t<sp/>color);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asyncBlink(uint32_t<sp/>color,<sp/>uint32_t<sp/>interval=BLINK_PERIOD);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asyncAlternatingBlink(uint32_t<sp/>firstColor,<sp/>uint32_t<sp/>secondColor,<sp/>uint32_t<sp/>interval=BLINK_PERIOD);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classLEDStateMachine" kindref="compound">LEDStateMachine</ref><sp/>ledStateMachine;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NEOPIXEL_H</highlight></codeline>
    </programlisting>
    <location file="include/neopixel.h"/>
  </compounddef>
</doxygen>
